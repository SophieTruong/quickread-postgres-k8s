name: Deploy to Amazon ECS
on:
  push:
    branches:
      - release/test
env:
  ENV_VARIABLE: test                          
  FLASK_CONTAINER_NAME: sophietruong92/quick-read-flaskapp 
  SERVER_CONTAINER_NAME: sophietruong92/quick-read-webserver

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push flaskapp
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./services/flaskapp/Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.FLASK_CONTAINER_NAME }}:1.3
      -
        name: Build and push webserver
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./services/nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.SERVER_CONTAINER_NAME }}:1.2
      # Configure AWS Credentials
      - 
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.MY_AWS_REGION }}
      - 
        name: Install Docker Compose
        run: curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh
      # Configure Docker context and use docker compose to deploy to ECS
      -
        name: Docker context and compose up
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.MY_AWS_ACCESS_KEY_ID }}
          AWS_ACCOUNT_ID: ${{ secrets.MY_AWS_ACCOUNT_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MY_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.MY_AWS_REGION }}
        run: |
          docker context create ecs ecs-context --from-env
          docker --context ecs-context compose -f docker-compose.aci.yml up
