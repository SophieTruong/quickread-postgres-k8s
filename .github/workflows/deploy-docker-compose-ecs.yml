name: Deploy to Amazon ECS
on:
  push:
    branches:
      - release/test
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.MY_AWS_ACCESS_KEY_ID }}
  AWS_ACCOUNT_ID: ${{ secrets.MY_AWS_ACCOUNT_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.MY_AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.MY_AWS_REGION }}              
  FLASK_CONTAINER_NAME: sophietruong92/quick-read-flaskapp
  SERVER_CONTAINER_NAME: sophietruong92/quick-read-webserver

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # Configure AWS Credentials
      - 
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.MY_AWS_REGION }}
      - 
        name: Install Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@main
        with:
          version: '1.29.2'
      -
        name: Update docker-compose cli version
        run: |
          sudo curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sudo sh
      -
        name: check docker new version 
        run: docker -v
      -
        name: check docker compose new version 
        run: docker compose version

      # Configure Docker context and use docker compose to deploy to ECS
      -
        name: Docker context create ecs-context
        run: |
          docker context create ecs ecs-context --from-env
          docker context ls
      -
        name: Build and push flaskapp
        run: |
          cd services/flaskapp
          docker buildx build --tag ${{ env.FLASK_CONTAINER_NAME }}:1.3 --file Dockerfile.prod  --load .
        shell: bash
      -
        name: Build and push webserver
        run: |
          cd services/nginx
          docker buildx build --tag ${{ env.SERVER_CONTAINER_NAME }}:1.2 --file Dockerfile --load .
        shell: bash
      # Configure Docker context and use docker compose to deploy to ECS
      -
        name: Docker compose up
        run: |
          docker --context ecs-context compose -f docker-compose.ecs.yml up
